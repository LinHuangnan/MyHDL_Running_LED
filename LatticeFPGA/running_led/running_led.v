// File: running_led.v
// Generated by MyHDL 0.10
// Date: Sun Jan  6 18:32:47 2019


`timescale 1ns/10ps

module running_led (
    clock,
    reset,
    led_driver
);
// Incrementer with enable.
// clock -- clock input
// reset -- asynchronous reset input
// leds -- output for led driver

input clock;
input reset;
output [7:0] led_driver;
reg [7:0] led_driver;

reg clock_led;
reg [23:0] clock_divider0_counter;
reg [7:0] shifting_register0_reg;



always @(posedge clock, negedge reset) begin: RUNNING_LED_CLOCK_DIVIDER0_DIVIDER
    if ((!reset)) begin
        clock_divider0_counter <= 0;
        clock_led <= 1'b1;
    end
    else begin
        clock_divider0_counter <= (clock_divider0_counter + 1);
        if ((clock_divider0_counter == 3000000)) begin
            clock_divider0_counter <= 0;
            clock_led <= (!clock_led);
        end
    end
end


always @(posedge clock_led, negedge reset) begin: RUNNING_LED_SHIFTING_REGISTER0_SHIFT
    if ((!reset)) begin
        shifting_register0_reg <= 1;
    end
    else begin
        if ((shifting_register0_reg[7] == 1)) begin
            shifting_register0_reg <= 1;
        end
        else begin
            shifting_register0_reg <= (shifting_register0_reg << 1);
        end
    end
    led_driver <= (~shifting_register0_reg);
end

endmodule
